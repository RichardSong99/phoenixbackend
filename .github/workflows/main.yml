name: Deploy to EKS

on:
  push:
    branches:
      - master  # replace with your branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # replace with your AWS region
    

    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: phoenixecr  # replace with your ECR repository name
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
    
    - name: Check kubectl version
      run: kubectl version --client

    - name: Set up kubeconfig
      run: |
        aws eks update-kubeconfig --region us-east-1 --name myphoenixcluster  # replace with your AWS region and EKS cluster name

    - name: Annotate service account
      run: | 
        kubectl annotate serviceaccount -n default default eks.amazonaws.com/role-arn=arn:aws:iam::723355352356:role/EKS_OIDC_Access
    
    - name: Inspect kubeconfig
      run: |
        cat ~/.kube/config
    
    - name: Check kubeconfig
      run: |
        kubectl config view
        kubectl config current-context
        kubectl config get-contexts   
    
    - name: Verify connection to Kubernetes cluster
      run: kubectl cluster-info
    
    - name: Get Kubernetes cluster nodes
      run: kubectl get nodes
    
    - name: Replace image in deployment file
      run: |
        sed -i 's|my-app:1.0.0|'"${{ steps.build-image.outputs.image }}"'|' deployment.yaml
    
    - name: Deploy to EKS
      run: kubectl apply -f deployment.yaml || exit 1
